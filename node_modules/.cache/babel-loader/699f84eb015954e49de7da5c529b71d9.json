{"ast":null,"code":"var _jsxFileName = \"/Users/utkarsh/projects/question-selector/src/screens/dashboard/index.tsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { StyleSheet, css } from 'aphrodite';\nimport Button from \"../../components/atoms/Button\";\nimport { STEPS, CONTENT_MODE, moveToNextStep, resetAll, submit } from \"../../redux/actions\";\nimport html2canvas from \"html2canvas\";\n;\n;\nconst DEFAULT_SCALE = 1; // question_details: { title: string, hint?: string, difficulty?: string, metadata?: any, image?: string, topic_id?: number, subject_id?: number, mode?: number, options: Array<{ optionText: string, mode?: number, isCorrect: boolean }>, summary?: string, ref?: number }\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.pdfRef = void 0;\n    this.subject_id = void 0;\n    this.topic_id = void 0;\n    this.difficulty = void 0;\n    this.metadata = void 0;\n    this.summary = void 0;\n    this.pdfRef = React.createRef();\n    this.state = {\n      cropping: {\n        value: false\n      },\n      mousePos: {\n        X: 0,\n        Y: 0\n      },\n      values: {}\n    };\n    this.summary = \"Empty summary\";\n    this.difficulty = \"easy\";\n    this.topic_id = 19;\n    this.subject_id = 1;\n    this.metadata = {};\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousemove\", this.onMouseMove.bind(this), false);\n    document.addEventListener(\"keydown\", this.onKeyDown.bind(this), false);\n    document.addEventListener(\"keyup\", this.onKeyUp.bind(this), false); //  console.log(this.pdfRef.current.contentWindow.document);\n  }\n\n  componentDidUpdate() {\n    if (this.props.step === STEPS.CORRECT_ANSWER) {\n      const enteredAnswer = parseInt(prompt('Which is the correct answer?'));\n      this.moveToNextStep(enteredAnswer, CONTENT_MODE.TEXT);\n    }\n\n    if (this.props.step === STEPS.SUBMIT) {\n      // Finally submit the form.\n      const title = this.props.values[STEPS.QUESTION];\n      const options = {\n        1: this.props.values[STEPS.ANSWER_1],\n        2: this.props.values[STEPS.ANSWER_2],\n        3: this.props.values[STEPS.ANSWER_3],\n        4: this.props.values[STEPS.ANSWER_4]\n      };\n      const correct_answer = this.props.values[STEPS.CORRECT_ANSWER];\n      const payload = {\n        title: this.props.values[STEPS.QUESTION].mode === CONTENT_MODE.TEXT ? this.props.values[STEPS.QUESTION].content : null,\n        mode: this.props.values[STEPS.QUESTION].mode,\n        difficulty: this.difficulty,\n        metadata: JSON.stringify(this.metadata),\n        image: this.props.values[STEPS.QUESTION].mode === CONTENT_MODE.IMAGE ? this.props.values[STEPS.QUESTION].content : null,\n        topic_id: this.topic_id,\n        subject_id: this.subject_id,\n        summary: this.summary,\n        options: [{\n          optionText: options[1].content,\n          mode: options[1].mode,\n          isCorrect: correct_answer === 1\n        }, {\n          optionText: options[2].content,\n          mode: options[2].mode,\n          isCorrect: correct_answer === 2\n        }, {\n          optionText: options[3].content,\n          mode: options[3].mode,\n          isCorrect: correct_answer === 3\n        }, {\n          optionText: options[4].content,\n          mode: options[4].mode,\n          isCorrect: correct_answer === 4\n        }]\n      };\n      console.log(payload);\n\n      const _this = this;\n\n      this.props.submit(payload);\n    }\n  }\n\n  cropCanvas(sourceCanvas, left, top, width, height) {\n    let destCanvas = document.createElement('canvas');\n    destCanvas.width = width;\n    destCanvas.height = height;\n    destCanvas.getContext(\"2d\").drawImage(sourceCanvas, left, top, width, height, // source rect with content to crop\n    0, 0, width, height); // newCanvas, same size as source rect\n\n    return destCanvas;\n  }\n\n  async onMouseMove(event) {\n    this.setState({\n      mousePos: {\n        X: event.clientX,\n        Y: event.clientY\n      }\n    });\n  }\n\n  async onKeyUp(event) {\n    if (this.state.cropping.value && event.keyCode == 16) {\n      const width = Math.abs(this.state.mousePos.X - this.state.cropping.clientX);\n      const height = Math.abs(this.state.mousePos.Y - this.state.cropping.clientY);\n      document.body.style.cursor = \"default\";\n      const style = document.getElementById(\"myStyle\");\n\n      if (style) {\n        style.textContent = \"\";\n      }\n\n      const canvas = await html2canvas(document.querySelector(\"body\"), {\n        scale: DEFAULT_SCALE\n      });\n      const new_canvas = this.cropCanvas(canvas, this.state.cropping.clientX * DEFAULT_SCALE, this.state.cropping.clientY * DEFAULT_SCALE, width * DEFAULT_SCALE, height * DEFAULT_SCALE);\n      this.moveToNextStep(new_canvas.toDataURL(\"image/png\"), CONTENT_MODE.IMAGE);\n      this.setState({\n        cropping: {\n          value: false\n        }\n      });\n    }\n  }\n\n  moveToNextStep(content, mode) {\n    if (this.props.step !== STEPS.SUBMIT) {\n      this.props.moveToNextStep(this.props.step, {\n        content,\n        mode\n      });\n    }\n  }\n\n  async onKeyDown(event) {\n    console.log(\"Presesd\");\n    const key = event.keyCode;\n    const ctrl = event.ctrlKey || event.metaKey;\n\n    if (ctrl && key == 67) {\n      // ctrl + c\n      console.log(\"LAA\");\n      const content = await navigator.clipboard.readText();\n      this.moveToNextStep(content, CONTENT_MODE.TEXT);\n    } else if (key == 16) {\n      this.setState({\n        cropping: {\n          value: true,\n          clientX: this.state.mousePos.X,\n          clientY: this.state.mousePos.Y\n        }\n      }); // document.body.style.cursor=\"none\";\n\n      document.body.style.cursor = \"crosshair\";\n      const style = document.getElementById(\"myStyle\") ? document.getElementById(\"myStyle\") : document.createElement(\"style\");\n      style.id = \"myStyle\";\n      style.textContent = \"\\n                .textLayer > span{\\n                    cursor: crosshair;\\n                    -webkit-touch-callout: none; /* iOS Safari */\\n                    -webkit-user-select: none; /* Safari */\\n                     -khtml-user-select: none; /* Konqueror HTML */\\n                       -moz-user-select: none; /* Old versions of Firefox */\\n                        -ms-user-select: none; /* Internet Explorer/Edge */\\n                            user-select: none; /* Non-prefixed version, currently\\n                                                  supported by Chrome, Opera and Firefox */\\n                }\\n            \";\n\n      if (!document.getElementById(\"myStyle\")) {\n        document.body.appendChild(style);\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: css(styles.container),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: css(styles.stepsSection),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: css(styles.stepsHeading),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Steps\"), React.createElement(\"div\", {\n      className: css(styles.buttonsContainer),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Button, {\n      text: \"Select Question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(Button, {\n      text: \"Select Answer 1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(Button, {\n      text: \"Select Answer 2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(Button, {\n      text: \"Select Answer 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(Button, {\n      text: \"Select Answer 4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(Button, {\n      text: \"Select Correct Answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    background: \"#fff\"\n  },\n  stepsSection: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: \"100vh\",\n    fontSize: '1.3rem'\n  },\n  buttonsContainer: {},\n  stepsHeading: {\n    marginBottom: \"1rem\"\n  }\n});\n\nconst mapStateToProps = ({\n  app\n}) => ({\n  step: app.step,\n  values: app.values\n});\n\nconst mapDispatchToProps = {\n  moveToNextStep,\n  resetAll,\n  submit\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/Users/utkarsh/projects/question-selector/src/screens/dashboard/index.tsx"],"names":["React","Component","connect","StyleSheet","css","Button","STEPS","CONTENT_MODE","moveToNextStep","resetAll","submit","html2canvas","DEFAULT_SCALE","Dashboard","constructor","props","pdfRef","subject_id","topic_id","difficulty","metadata","summary","createRef","state","cropping","value","mousePos","X","Y","values","componentDidMount","document","addEventListener","onMouseMove","bind","onKeyDown","onKeyUp","componentDidUpdate","step","CORRECT_ANSWER","enteredAnswer","parseInt","prompt","TEXT","SUBMIT","title","QUESTION","options","ANSWER_1","ANSWER_2","ANSWER_3","ANSWER_4","correct_answer","payload","mode","content","JSON","stringify","image","IMAGE","optionText","isCorrect","console","log","_this","cropCanvas","sourceCanvas","left","top","width","height","destCanvas","createElement","getContext","drawImage","event","setState","clientX","clientY","keyCode","Math","abs","body","style","cursor","getElementById","textContent","canvas","querySelector","scale","new_canvas","toDataURL","key","ctrl","ctrlKey","metaKey","navigator","clipboard","readText","id","appendChild","render","styles","container","stepsSection","stepsHeading","buttonsContainer","create","display","background","flex","flexDirection","alignItems","justifyContent","fontSize","marginBottom","mapStateToProps","app","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component, Ref, RefObject, MutableRefObject } from 'react';\nimport { connect } from 'react-redux';\nimport PDFViewer from '../../components/molecules/Pdf';\nimport { StyleSheet, css } from 'aphrodite';\nimport Button from \"../../components/atoms/Button\";\nimport { STEPS, CONTENT_MODE, moveToNextStep, resetAll, submit } from \"../../redux/actions\";\nimport PDFJSBackend from \"../../backends/pdfjs\";\nimport html2canvas from \"html2canvas\";\nimport {requestAPICall} from \"../../util/network\";\n\ninterface iProps {\n\n};\ninterface iState {\n\n};\n\nconst DEFAULT_SCALE = 1;\n// question_details: { title: string, hint?: string, difficulty?: string, metadata?: any, image?: string, topic_id?: number, subject_id?: number, mode?: number, options: Array<{ optionText: string, mode?: number, isCorrect: boolean }>, summary?: string, ref?: number }\nclass Dashboard extends Component<any, any>{\n    pdfRef: any;\n    subject_id: number;\n    topic_id: number;\n    difficulty: string;\n    metadata: any;\n    summary: string;\n\n    constructor(props: iProps) {\n        super(props);\n        this.pdfRef = React.createRef();\n        this.state = {\n            cropping: {\n                value: false\n            },\n            mousePos: {\n                X: 0,\n                Y: 0\n            },\n            values: {\n\n            }\n        }\n        this.summary = \"Empty summary\";\n        this.difficulty = \"easy\";\n        this.topic_id = 19;\n        this.subject_id = 1;\n        this.metadata = {};\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"mousemove\", this.onMouseMove.bind(this), false);\n        document.addEventListener(\"keydown\", this.onKeyDown.bind(this), false);\n        document.addEventListener(\"keyup\", this.onKeyUp.bind(this), false);\n        //  console.log(this.pdfRef.current.contentWindow.document);\n    }\n\n    componentDidUpdate(){\n        if(this.props.step === STEPS.CORRECT_ANSWER){\n            const enteredAnswer = parseInt(prompt('Which is the correct answer?'));\n            this.moveToNextStep(enteredAnswer, CONTENT_MODE.TEXT);\n\n        }\n        if(this.props.step === STEPS.SUBMIT){\n            // Finally submit the form.\n            const title = this.props.values[STEPS.QUESTION];\n            const options = {\n                1: this.props.values[STEPS.ANSWER_1],\n                2: this.props.values[STEPS.ANSWER_2],\n                3: this.props.values[STEPS.ANSWER_3],\n                4: this.props.values[STEPS.ANSWER_4],\n            };\n            const correct_answer = this.props.values[STEPS.CORRECT_ANSWER];\n            const payload = {\n                title: this.props.values[STEPS.QUESTION].mode === CONTENT_MODE.TEXT ?  this.props.values[STEPS.QUESTION].content : null,\n                mode: this.props.values[STEPS.QUESTION].mode,\n                difficulty: this.difficulty,\n                metadata: JSON.stringify(this.metadata),\n                image: this.props.values[STEPS.QUESTION].mode === CONTENT_MODE.IMAGE ?  this.props.values[STEPS.QUESTION].content : null,\n                topic_id: this.topic_id,\n                subject_id: this.subject_id,\n                summary: this.summary,\n                options: [\n                    {\n                        optionText: options[1].content,\n                        mode: options[1].mode,\n                        isCorrect: correct_answer === 1\n                    },\n                    {\n                        optionText: options[2].content,\n                        mode: options[2].mode,\n                        isCorrect: correct_answer === 2\n                    },\n                    {\n                        optionText: options[3].content,\n                        mode: options[3].mode,\n                        isCorrect: correct_answer === 3\n                    },\n                    {\n                        optionText: options[4].content,\n                        mode: options[4].mode,\n                        isCorrect: correct_answer === 4\n                    }\n                ]\n\n            };\n            console.log(payload);\n            const _this = this;\n            this.props.submit(payload);\n        }\n    }\n\n    cropCanvas(sourceCanvas: HTMLCanvasElement, left: number, top: number, width: number ,height:number){\n        let destCanvas = document.createElement('canvas');\n        destCanvas.width = width;\n        destCanvas.height = height;\n        destCanvas.getContext(\"2d\").drawImage(\n            sourceCanvas,\n            left,top,width,height,  // source rect with content to crop\n            0,0,width,height);      // newCanvas, same size as source rect\n        return destCanvas;\n    }\n    async onMouseMove(event: MouseEvent){\n        this.setState({mousePos: {X: event.clientX, Y: event.clientY}});\n    }\n\n    async onKeyUp(event: KeyboardEvent){\n        if(this.state.cropping.value && event.keyCode==16){\n            const width = Math.abs(this.state.mousePos.X - this.state.cropping.clientX);\n            const height = Math.abs(this.state.mousePos.Y - this.state.cropping.clientY);\n            document.body.style.cursor=\"default\";\n            const style = document.getElementById(\"myStyle\");\n\n            if(style){\n                style.textContent = \"\";\n            }\n            const canvas = await html2canvas(document.querySelector(\"body\"), {scale: DEFAULT_SCALE});\n            const new_canvas = this.cropCanvas(canvas, this.state.cropping.clientX * DEFAULT_SCALE, this.state.cropping.clientY * DEFAULT_SCALE, width * DEFAULT_SCALE, height * DEFAULT_SCALE);\n            this.moveToNextStep(new_canvas.toDataURL(\"image/png\"), CONTENT_MODE.IMAGE);\n            this.setState({cropping: {value: false}});\n        }\n    }\n\n    moveToNextStep(content: any, mode: number) {\n        if(this.props.step !== STEPS.SUBMIT){\n            this.props.moveToNextStep(this.props.step, {content, mode});\n        }\n    }\n\n    async onKeyDown(event: KeyboardEvent) {\n        console.log(\"Presesd\");\n        const key = event.keyCode;\n        const ctrl = event.ctrlKey || event.metaKey;\n        if (ctrl && key == 67) {\n            // ctrl + c\n            console.log(\"LAA\");\n            const content = await navigator.clipboard.readText();\n            this.moveToNextStep(content, CONTENT_MODE.TEXT);\n        } else if(key == 16){\n            this.setState({cropping: {value: true, clientX: this.state.mousePos.X, clientY: this.state.mousePos.Y }});\n            // document.body.style.cursor=\"none\";\n            document.body.style.cursor=\"crosshair\";\n            const style: HTMLStyleElement = document.getElementById(\"myStyle\") ? document.getElementById(\"myStyle\") as HTMLStyleElement :  document.createElement(\"style\");\n            style.id = \"myStyle\";\n            style.textContent = `\n                .textLayer > span{\n                    cursor: crosshair;\n                    -webkit-touch-callout: none; /* iOS Safari */\n                    -webkit-user-select: none; /* Safari */\n                     -khtml-user-select: none; /* Konqueror HTML */\n                       -moz-user-select: none; /* Old versions of Firefox */\n                        -ms-user-select: none; /* Internet Explorer/Edge */\n                            user-select: none; /* Non-prefixed version, currently\n                                                  supported by Chrome, Opera and Firefox */\n                }\n            `\n            if(!document.getElementById(\"myStyle\")){\n                document.body.appendChild(style);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className={css(styles.container)}>\n                <div className={css(styles.stepsSection)}>\n                    <div className={css(styles.stepsHeading)}>Steps</div>\n                    <div className={css(styles.buttonsContainer)}>\n                        <Button text=\"Select Question\"></Button>\n                        <Button text=\"Select Answer 1\"></Button>\n                        <Button text=\"Select Answer 2\"></Button>\n                        <Button text=\"Select Answer 3\"></Button>\n                        <Button text=\"Select Answer 4\"></Button>\n                        <Button text=\"Select Correct Answer\"></Button>\n                    </div>\n\n                </div>\n            </div>\n        )\n    };\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: \"flex\",\n        background: \"#fff\"\n    },\n    stepsSection: {\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        height: \"100vh\",\n        fontSize: '1.3rem'\n    },\n    buttonsContainer: {\n\n    },\n    stepsHeading: {\n        marginBottom: \"1rem\"\n    }\n});\n\nconst mapStateToProps = ({ app }: any) => ({\n    step: app.step,\n    values: app.values\n});\n\nconst mapDispatchToProps = {\n    moveToNextStep,\n    resetAll,\n    submit\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps,\n)(Dashboard);"]},"metadata":{},"sourceType":"module"}